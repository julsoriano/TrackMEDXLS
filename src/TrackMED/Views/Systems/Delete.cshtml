@model TrackMED.Models.SystemTab

@{
    ViewBag.Title = "Delete";
}

<h2>Delete</h2>

<p class="error">@ViewBag.ConcurrencyErrorMessage</p>

<h3>Are you sure you want to delete this?</h3>
<style>
    td, th {
        border-bottom: 1px solid #333333;
        padding: 6px 16px;
        text-align: left;
    }
</style>
<div>
    <h4>System Table</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.imte)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.imte)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.serialnumber)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.serialnumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SystemsDescription.Desc)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.SystemsDescription.Desc)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Owner.Desc)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Owner.Desc)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Location.Desc)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Location.Desc)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ReferenceNo)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ReferenceNo)
        </dd>

    </dl>

    <div class="form-group">
        <div class="col-md-12">
            <table>
                <tr>
                    <th>Description</th>
                    <th>Left Component</th>
                    <th>Description</th>
                    <th>Right Component</th>
                </tr>
                <tr>
                    @{
                        // Without ToList() in the Controller, the ViewBag data is as HashSet
                        // HashSet<TrackMED.Models.Component> leftComponents = ViewBag.leftComponents;
                        // HashSet<TrackMED.Models.Component> rightComponents = ViewBag.rightComponents;

                        List<TrackMED.Models.Component> leftComponents = ViewBag.leftComponents;
                        List<TrackMED.Models.Component> rightComponents = ViewBag.rightComponents;
                        var leftandright = leftComponents.Zip(rightComponents, (l, r) => new { Left = l, Right = r });

                        /* Another way of doing the foreach below
                        foreach (var lr in leftComponents.Zip(rightComponents, Tuple.Create))
                        {
                            Console.WriteLine(lr.Item1 + lr.Item2);
                        }
                        */

                        foreach (var lr in leftandright)
                        {
                            @: <td>  @lr.Left.Description.Desc  </td>
                            @: <td>  @lr.Left.imte              </td>
                            @: <td>  @lr.Right.Description.Desc </td>
                            @: <td>  @lr.Right.imte             </td>
                            @: </tr><tr>
                        }
                        @: </tr>
                    }
            </table>
        </div>
    </div>

    @using (Html.BeginForm()) {
        @Html.AntiForgeryToken()
        @*@Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.RowVersion)*@
              
        <div class="form-actions no-color">
            <input type="submit" value="Delete" class="btn btn-default" /> |
            @Html.ActionLink("Back to List", "Index")
        </div>
    }
</div>
